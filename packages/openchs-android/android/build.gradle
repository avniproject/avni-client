// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        buildToolsVersion = "35.0.0"
        minSdkVersion = 24
        compileSdkVersion = 35
        targetSdkVersion = 35
        supportLibVersion = "1.2.0"
        googlePlayServicesVersion = "16.0.0" //Without this the react-native-device-info crashes
        kotlinVersion = '2.1.20' // Primary Kotlin version for app and packages
        reactNativeVersion = '0.79.2' // Centralized React Native version

        // NDK 25 required for Realm 12.14.2 compatibility
        ndkVersion = "25.2.9519653"
    }

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.11.0'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath 'de.undercouch:gradle-download-task:4.1.2'
        classpath 'com.facebook.react:react-native-gradle-plugin'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        // Compatible KSP version for Kotlin 2.1.20
        classpath "com.google.devtools.ksp:symbol-processing-gradle-plugin:2.1.20-2.0.1"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    
    // Force KSP version resolution in buildscript classpath
    configurations.classpath {
        resolutionStrategy {
            force "com.google.devtools.ksp:symbol-processing-gradle-plugin:2.1.20-2.0.1"
            force "com.google.devtools.ksp:symbol-processing-api:2.1.20-2.0.1"
        }
    }
}

apply plugin: "com.facebook.react.rootproject"

subprojects {
    // Disable KSP and tests for React Native packages to avoid compatibility issues
    // EXCEPTIONS: AsyncStorage needs KSP for Room, Realm needs full compilation
    if ((project.name.startsWith('react-native') && !project.name.contains('async-storage')) 
        || project.name == 'bugsnag-react-native') {
        afterEvaluate {
            // Disable all KSP tasks for React Native packages
            tasks.withType(org.jetbrains.kotlin.gradle.internal.KaptWithoutKotlincTask).configureEach { enabled = false }
            tasks.matching { it.name.contains('ksp') }.configureEach { enabled = false }
            // Disable unit tests for React Native packages (SDK version conflicts)
            tasks.matching { it.name.contains('test') && it.name.contains('UnitTest') }.configureEach { enabled = false }
        }
        return
    }

    // Removed KSP version forcing - let each package manage its own KSP version
    // configurations.all {
    //     resolutionStrategy {
    //         // Each package can use its own KSP version compatible with its Kotlin version
    //     }
    // }

    // AsyncStorage uses KSP with Kotlin 2.1.20 - ensure proper Kotlin compilation
    if (project.name.contains('async-storage')) {
        afterEvaluate {
            // Ensure Kotlin tasks use compatible settings
            tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
                kotlinOptions {
                    jvmTarget = '17'
                    languageVersion = '2.1'
                    apiVersion = '2.1'
                }
            }
            println "✅ AsyncStorage configured with Kotlin 2.1.20 + Room 2.8.2 + KSP 2.1.20-2.0.1"
        }
    }

    // Configure subprojects after auto-linking evaluation
    gradle.projectsEvaluated {
        if (hasProperty("android")) {
            android {
                compileSdkVersion = 35

                compileOptions {
                    sourceCompatibility = JavaVersion.VERSION_17
                    targetCompatibility = JavaVersion.VERSION_17
                }

                // CRITICAL: Force NDK 25 for all modules to maintain ABI compatibility
                if (project.name == 'realm') {
                    ndkVersion = rootProject.ext.ndkVersion
                    println "✅ Forcing Realm module to use NDK ${rootProject.ext.ndkVersion}"
                }
                
                // Force nitro-modules and audio-recorder-player to use NDK 25 for compatibility
                if (project.name == 'react-native-nitro-modules' || project.name == 'react-native-audio-recorder-player') {
                    ndkVersion = rootProject.ext.ndkVersion
                    println "✅ Forcing ${project.name} to use NDK ${rootProject.ext.ndkVersion} for ABI compatibility"
                }
            }
        }

        // Configure Kotlin JVM target and language version
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile.class).configureEach {
            kotlinOptions {
                jvmTarget = '17'
                // Kotlin 2.1.20 with modern language features
                languageVersion = '2.1'
                apiVersion = '2.1'
            }
        }
    }
}

allprojects {
    configurations.all {
        resolutionStrategy {
            // Redirect react-native artifact requests to react-android (RN manual linking)
            dependencySubstitution {
                substitute module('com.facebook.react:react-native') using module("com.facebook.react:react-android:$reactNativeVersion")
            }

            // Force explicit versions for React Native artifacts
            // Note: In RN 0.79+, Hermes is merged into react-android, no separate hermes-android
            force "com.facebook.react:react-android:$reactNativeVersion"
            
            // Force compatible KSP version for Kotlin 2.1.20
            force "com.google.devtools.ksp:symbol-processing-gradle-plugin:2.1.20-2.0.1"
            force "com.google.devtools.ksp:symbol-processing-api:2.1.20-2.0.1"
            force "com.google.devtools.ksp:symbol-processing:2.1.20-2.0.1"
            
            // Force Room 2.8.2 compatible with Kotlin 2.1.20 for AsyncStorage
            force "androidx.room:room-runtime:2.8.2"
            force "androidx.room:room-compiler:2.8.2"
            force "androidx.room:room-ktx:2.8.2"
            force "androidx.room:room-common:2.8.2"
        }
    }

    repositories {
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        mavenCentral {
            // We don't want to fetch react-native from Maven Central as there are
            // older versions over there.
            content {
                excludeGroup "com.facebook.react"
            }
        }
        google()
        maven { url 'https://repo1.maven.org/maven2' }
        gradlePluginPortal()
    }
}

// Auto-linking handled automatically by React Native Gradle Plugin
// No manual configuration needed
