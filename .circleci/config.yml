version: 2.1
# Configuration for React Native 0.76.5, React 18.2, Node 20, Realm 12.14.2
parameters:
  flavor:
    type: enum
    default: "generic"
    enum: ["generic", "lfe", "sakhi", "lfeTeachNagaland", "gramin", "lfeTeachNagalandSecurity"]
    description: Flavor of the binary to generate. Must be one of "generic", "lfe", "lfeTeachNagaland", "gramin", "lfeTeachNagalandSecurity" or "sakhi"
  versionCode:
    type: string
    default: "1"
    description: Version code for the binary for internal use on the play store. Is of the format 100302.
  versionName:
    type: string
    default: "1.0.0"
    description: Version name for the binary for external display on the play store. Is of the format 10.3.2

orbs:
  aws-cli: circleci/aws-cli@4.1.1
  aws-s3: circleci/aws-s3@4.0

commands:
  install_ndk:
    description: "Install Android NDK 25.2.9519653 with caching and retry logic"
    steps:
      - restore_cache:
          keys:
            - ndk-25.2.9519653-v1
      - run:
          name: Accept Android SDK licenses
          command: |
            echo "Accepting all Android SDK licenses..."
            yes | sdkmanager --licenses || true
      - run:
          name: Install NDK with retry logic
          command: |
            if [ -d "$ANDROID_HOME/ndk/25.2.9519653" ]; then
              echo "NDK 25.2.9519653 already installed (from cache)"
              exit 0
            fi
            
            echo "=== Starting NDK Installation ==="
            for i in 1 2 3; do
              echo "Attempt $i of 3"
              
              if yes | sdkmanager "ndk;25.2.9519653"; then
                echo "✅ NDK installed successfully"
                break
              else
                EXIT_CODE=$?
                echo "❌ NDK installation failed (exit code: $EXIT_CODE)"
                rm -rf $ANDROID_HOME/ndk/25.2.9519653 2>/dev/null || true
                
                if [ $i -eq 3 ]; then
                  echo "=== Diagnostics ==="
                  echo "Available NDK versions:"
                  sdkmanager --list 2>&1 | grep "ndk;" | head -5
                  echo "Disk space:"
                  df -h $ANDROID_HOME
                  echo "Failed to install NDK after 3 attempts"
                  exit 1
                else
                  echo "Retrying in 5 seconds..."
                  sleep 5
                fi
              fi
            done
            
            echo "Verifying installation..."
            ls -la $ANDROID_HOME/ndk/25.2.9519653 || exit 1
      - save_cache:
          key: ndk-25.2.9519653-v1
          paths:
            - ~/.android/ndk/25.2.9519653

  setup_autolinking:
    description: "Setup autolinking with caching"
    steps:
      - run:
          name: Check autolinking cache
          command: |
            if [ -d packages/openchs-android/android/build/generated/autolinking ]; then
              echo "Using cached autolinking configuration"
            else
              echo "Generating fresh autolinking configuration..."
              cd packages/openchs-android && npm run prebuild:android
            fi

jobs:
  install_deps:
    docker:
      - image: cimg/node:20.19.5
    working_directory: ~/avni-client
    steps:
      - checkout
      - run: sudo apt-get install make
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}
            - v2-dependencies-
      - run: |
          echo "Checking if dependencies are already installed..."
          if [ -d packages/openchs-android/node_modules ]; then
            echo "Dependencies already cached, skipping deps_ci"
          else
            echo "Dependencies not found, running deps_ci..."
            make deps_ci
          fi
      - save_cache:
          paths:
            - packages/openchs-android/node_modules
          key: v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}

  test_android:
    docker:
      - image: cimg/node:20.19.5
    working_directory: ~/avni-client
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}
            - v2-dependencies-
      - run: sudo apt-get install make
      - run: make ci test-android

  release_android_no_env:
    docker:
      - image: cimg/android:2024.01-node
    working_directory: ~/avni-client
    resource_class: large
    steps:
      - checkout
      - run: echo "Building with no_env"
      - install_ndk
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}
            - v2-dependencies-
      - setup_autolinking
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      # react-native-cli deprecated - using npx with @react-native-community/cli from node_modules
      - run: make apply_patch release_no_env_universal_without_clean
      - save_cache:
          key: v2-gradle-deps-{{ checksum "packages/openchs-android/android/build.gradle" }}
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - save_cache:
          key: v2-autolinking-{{ checksum "packages/openchs-android/package-lock.json" }}
          paths:
            - ~/avni-client/packages/openchs-android/android/build/generated/autolinking
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/generic/release/app-generic-release.apk
          destination: no_env-<< pipeline.git.revision >>.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/genericRelease/index.android.bundle.map
          destination: sourcemap-no_env-<< pipeline.git.revision >>.map

  release_android_staging:
    docker:
      - image: cimg/android:2024.01-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: << pipeline.parameters.flavor >>
    steps:
      - checkout
      - run: echo "Building flavor << pipeline.parameters.flavor >>"
      - install_ndk
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v2-gradle-deps-{{ checksum "packages/openchs-android/android/build.gradle" }}
            - v2-dependencies-
      - setup_autolinking
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      # react-native-cli deprecated - using npx with @react-native-community/cli from node_modules
      - run: make apply_patch release_staging_dev_without_clean
      - run: make deploy_platform_translations_staging
      - save_cache:
          key: v2-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-staging
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - save_cache:
          key: v2-autolinking-{{ checksum "packages/openchs-android/package-lock.json" }}
          paths:
            - ~/avni-client/packages/openchs-android/android/build/generated/autolinking
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          destination: << pipeline.parameters.flavor >>-staging_dev-<< pipeline.git.revision >>.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/<< pipeline.parameters.flavor >>Release/index.android.bundle.map
          destination: sourcemap-<< pipeline.parameters.flavor >>-staging-<< pipeline.git.revision >>.map

  release_android_gramin_staging:
    docker:
      - image: cimg/android:2024.01-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: gramin
    steps:
      - checkout
      - run: echo "Building flavor gramin"
      - install_ndk
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v2-gradle-deps-{{ checksum "packages/openchs-android/android/build.gradle" }}
            - v2-dependencies-
      - setup_autolinking
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      # react-native-cli deprecated - using npx with @react-native-community/cli from node_modules
      - run: make apply_patch release_gramin_staging_dev_without_clean
      - run: make deploy_platform_translations_gramin_staging
      - save_cache:
          key: v2-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-gramin-staging
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - save_cache:
          key: v2-autolinking-{{ checksum "packages/openchs-android/package-lock.json" }}
          paths:
            - ~/avni-client/packages/openchs-android/android/build/generated/autolinking
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/gramin/release/app-gramin-release.apk
          destination: gramin-staging_dev-<< pipeline.git.revision >>.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/graminRelease/index.android.bundle.map
          destination: sourcemap-gramin-staging-<< pipeline.git.revision >>.map

  release_android_prerelease:
    docker:
      - image: cimg/android:2024.01-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: << pipeline.parameters.flavor >>
    steps:
      - checkout
      - run: echo "Building flavor << pipeline.parameters.flavor >>"
      - install_ndk
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v2-gradle-deps-{{ checksum "packages/openchs-android/android/build.gradle" }}
            - v2-dependencies-
      - setup_autolinking
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      # react-native-cli deprecated - using npx with @react-native-community/cli from node_modules
      - aws-cli/setup:
          role_arn: 'arn:aws:iam::118388513628:role/CircleCI-OIDC'
          region: 'ap-south-1'
      - run: make apply_patch release_prerelease_dev_without_clean
      - aws-s3/copy:
          from: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          to: s3://samanvay/openchs/<< pipeline.number >>-<< pipeline.git.revision >>/prerelease_dev/
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          destination: << pipeline.parameters.flavor >>-prerelease_dev-<< pipeline.git.revision >>.apk
      - run: make release_prerelease_without_clean
      - aws-s3/copy:
          from: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          to: s3://samanvay/openchs/<< pipeline.number >>-<< pipeline.git.revision >>/prerelease/
      - run: make deploy_platform_translations_prerelease
      - save_cache:
          key: v2-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-prerelease
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - save_cache:
          key: v2-autolinking-{{ checksum "packages/openchs-android/package-lock.json" }}
          paths:
            - ~/avni-client/packages/openchs-android/android/build/generated/autolinking
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          destination: << pipeline.parameters.flavor >>-prerelease-<< pipeline.git.revision >>.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/<< pipeline.parameters.flavor >>Release/index.android.bundle.map
          destination: sourcemap-<< pipeline.parameters.flavor >>-prerelease-<< pipeline.git.revision >>.map

  release_android_perf:
    docker:
      - image: cimg/android:2024.01-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: << pipeline.parameters.flavor >>
    steps:
      - checkout
      - run: echo "Building flavor << pipeline.parameters.flavor >>"
      - install_ndk
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v2-gradle-deps-{{ checksum "packages/openchs-android/android/build.gradle" }}
            - v2-dependencies-
      - setup_autolinking
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      # react-native-cli deprecated - using npx with @react-native-community/cli from node_modules
      - run: make apply_patch release_perf_without_clean
      - run: make deploy_platform_translations_prerelease
      - save_cache:
          key: v2-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-perf
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - save_cache:
          key: v2-autolinking-{{ checksum "packages/openchs-android/package-lock.json" }}
          paths:
            - ~/avni-client/packages/openchs-android/android/build/generated/autolinking
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          destination: << pipeline.parameters.flavor >>-perf-<< pipeline.git.revision >>.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/<< pipeline.parameters.flavor >>Release/index.android.bundle.map
          destination: sourcemap-<< pipeline.parameters.flavor >>-perf-<< pipeline.git.revision >>.map

  release_android_live:
    parameters:
      keystore_password:
        type: string
        default: << pipeline.parameters.flavor >>_KEYSTORE_PASSWORD
      key_password:
        type: string
        default: << pipeline.parameters.flavor >>_KEY_PASSWORD
      key_alias:
        type: string
        default: << pipeline.parameters.flavor >>_KEY_ALIAS
    docker:
      - image: cimg/android:2024.01-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: << pipeline.parameters.flavor >>
      versionCode: << pipeline.parameters.versionCode >>
      versionName: << pipeline.parameters.versionName >>
    steps:
      - checkout
      - run: echo "Building flavor << pipeline.parameters.flavor >>"
      - run: echo "Building versionCode << pipeline.parameters.versionCode >>; versionName << pipeline.parameters.versionName >>"
      - run: |
          # Validate keystore environment variables exist before starting build
          if [ -z "$<< parameters.keystore_password >>" ]; then
            echo "Error: Keystore password not set for flavor << pipeline.parameters.flavor >>"
            exit 1
          fi
          if [ -z "$<< parameters.key_password >>" ]; then
            echo "Error: Key password not set for flavor << pipeline.parameters.flavor >>"
            exit 1
          fi
          if [ -z "$<< parameters.key_alias >>" ]; then
            echo "Error: Key alias not set for flavor << pipeline.parameters.flavor >>"
            exit 1
          fi
          echo "All keystore credentials validated"
      - install_ndk
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v2-gradle-deps-{{ checksum "packages/openchs-android/android/build.gradle" }}
            - v2-dependencies-
      - setup_autolinking
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      # react-native-cli deprecated - using npx with @react-native-community/cli from node_modules
      - run: make apply_patch
      - run: versionName=<< pipeline.parameters.versionName >> versionCode=<< pipeline.parameters.versionCode >> make bundle_release_prod_without_clean
      - run: versionName=<< pipeline.parameters.versionName >> versionCode=<< pipeline.parameters.versionCode >> make release_prod_dev_universal_without_clean
      - save_cache:
          key: v2-gradle-deps-{{ checksum "packages/openchs-android/android/build.gradle" }}
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - save_cache:
          key: v2-autolinking-{{ checksum "packages/openchs-android/package-lock.json" }}
          paths:
            - ~/avni-client/packages/openchs-android/android/build/generated/autolinking
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/bundle/<< pipeline.parameters.flavor >>Release/app-<< pipeline.parameters.flavor >>-release.aab
          destination: << pipeline.parameters.flavor >>-live-<< pipeline.parameters.versionName >>-<< pipeline.git.revision >>.aab
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/<< pipeline.parameters.flavor >>Release/index.android.bundle.map
          destination: sourcemap-<< pipeline.parameters.flavor >>-live-<< pipeline.parameters.versionName >>-<< pipeline.git.revision >>.map
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          destination: << pipeline.parameters.flavor >>-live_dev-<< pipeline.parameters.versionName >>-<< pipeline.git.revision >>-apk.zip
      - run: curl -L https://github.com/google/bundletool/releases/download/1.15.1/bundletool-all-1.15.1.jar > ./bundletool.jar
      - run: java -jar ./bundletool.jar build-apks --bundle=packages/openchs-android/android/app/build/outputs/bundle/<< pipeline.parameters.flavor >>Release/app-<< pipeline.parameters.flavor >>-release.aab --output=avniuniversal.apks --mode=universal --ks=packages/openchs-android/android/app/<< pipeline.parameters.flavor >>-release-key.keystore --ks-pass=pass:$<< parameters.keystore_password >> --ks-key-alias=$<< parameters.key_alias >> --key-pass=pass:$<< parameters.key_password >>
      - store_artifacts:
          path: avniuniversal.apks
          destination: << pipeline.parameters.flavor >>-live-<< pipeline.parameters.versionName >>-<< pipeline.git.revision >>-apk.zip
      - aws-cli/setup:
          role_arn: 'arn:aws:iam::118388513628:role/CircleCI-OIDC'
          region: 'ap-south-1'
      - aws-s3/copy:
          from: avniuniversal.apks
          to: s3://samanvay/openchs/<< pipeline.number >>-<< pipeline.git.revision >>/prod/
      - aws-s3/copy:
          from: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          to: s3://samanvay/openchs/<< pipeline.number >>-<< pipeline.git.revision >>/prod_dev/
      - run: make deploy_platform_translations_for_flavor_live

workflows:
  version: 2
  test_all:
    jobs:
      - install_deps
      - test_android:
          requires:
            - install_deps
      - hold_gramin_staging:
          type: approval
          requires:
            - test_android
      - hold_prerelease:
          type: approval
          requires:
            - test_android
      - hold_perf:
          type: approval
          requires:
            - test_android
      - hold_live:
          type: approval
          requires:
            - test_android
      - hold_no_env:
          type: approval
          requires:
            - test_android
      - release_android_staging:
          filters:
            branches:
              ignore:
                - /^dependabot.*/
          requires:
            - test_android
      - release_android_gramin_staging:
          filters:
            branches:
              ignore:
                - /^dependabot.*/
          requires:
            - hold_gramin_staging
      - release_android_no_env:
          filters:
            branches:
              ignore:
                - /^dependabot.*/
          requires:
            - hold_no_env
      - release_android_prerelease:
          context:
            - CIRCLECI_OIDC_AWS
          requires:
            - hold_prerelease
      - release_android_perf:
          requires:
            - hold_perf
      - release_android_live:
          context:
            - CIRCLECI_OIDC_AWS
          requires:
            - hold_live
            - test_android

notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/0fdffde721194986f2a0
