// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        buildToolsVersion = "35.0.0"
        minSdkVersion = 24
        compileSdkVersion = 35
        targetSdkVersion = 35
        supportLibVersion = "1.2.0"
        googlePlayServicesVersion = "16.0.0" //Without this the react-native-device-info crashes
        kotlinVersion = '2.1.0'

        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.
        ndkVersion = "23.1.7779620"
    }

    repositories {
        mavenCentral()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.1'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath 'de.undercouch:gradle-download-task:4.1.2'
        // React Native gradle plugin is handled via includeBuild in settings.gradle
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

allprojects {

    repositories {
        mavenLocal()
        google()
        mavenCentral()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com' }
        maven { url "https://dl.google.com/dl/android/maven2/index.html" }
        maven { url 'https://repo1.maven.org/maven2'}
        gradlePluginPortal()
    }

}

subprojects {
    afterEvaluate {
        project ->
            if (project.hasProperty("android")) {
                android {
                    compileSdkVersion = 35
                }
            }
    }
}

// Workaround for React Native 0.81.4 autolinking issue
// Generate autolinking.json before any tasks that depend on it
task generateAutolinkingConfig(type: Exec) {
    description = 'Generate autolinking configuration for React Native 0.81.4'
    group = 'react-native'
    
    // Ensure output directory exists
    doFirst {
        mkdir "${rootDir}/build/generated/autolinking"
    }
    
    workingDir rootDir.parentFile
    executable = System.getProperty('os.name').toLowerCase().contains('windows') ? 'npx.cmd' : 'npx'
    args = ['react-native', 'config', '--platform', 'android']
    standardOutput = new FileOutputStream("${rootDir}/build/generated/autolinking/autolinking.json")
    
    // Only run if the file doesn't exist or is older than react-native.config.js
    File autolinkingFile = file("${rootDir}/build/generated/autolinking/autolinking.json")
    File configFile = file("${rootDir.parentFile}/react-native.config.js")
    
    inputs.file configFile
    outputs.file autolinkingFile
}

// Ensure autolinking config is generated before any build tasks
allprojects {
    afterEvaluate { project ->
        if (project.name == 'app') {
            project.tasks.matching { it.name.startsWith('generate') || it.name.contains('Build') }.configureEach {
                dependsOn(generateAutolinkingConfig)
            }
        }
    }
}
