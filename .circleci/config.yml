version: 2
jobs:
  install_deps:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/avni-client
    steps:
      - checkout
      #      - restore_cache:
      #          keys:
      #          - v1-dependencies-{{ checksum "package.json" }}
      #          - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      #          - v1-dependencies-
      - run: sudo apt-get install make
      - run: make deps_ci
#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}
      - save_cache:
          paths:
            - packages/openchs-android/node_modules
          key: v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}

  test_android:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/avni-client
    steps:
      - checkout
      - restore_cache:
          keys:
#            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
            - v1-dependencies-
      - run: sudo apt-get install make
      - run: make deps_ci
      - run: make ci test-android

  release_android_staging:
    docker:
      - image: cimg/android:2022.12-node
    working_directory: ~/avni-client
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
#            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-staging
            - v1-dependencies-
#      - run: sudo apt --only-upgrade install software-properties-common
#      - run: sudo apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main'
#      - run: sudo apt update
#      - run: sudo apt install openjdk-11-jdk make
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      - run: sudo npm i -g react-native-cli
      - run: make deps_ci release_staging_without_clean
      - run: make deploy_platform_translations_staging
      - save_cache:
          key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-staging
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/release/app-release.apk
          destination: avni.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemap.js
          destination: sourcemap.js

  release_android_prerelease:
    docker:
      - image: cimg/android:2022.12-node
    working_directory: ~/avni-client
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            #            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-prerelease
            - v1-dependencies-
      #      - run: sudo apt --only-upgrade install software-properties-common
      #      - run: sudo apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main'
      #      - run: sudo apt update
      #      - run: sudo apt install openjdk-11-jdk make
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      - run: sudo npm i -g react-native-cli
      - run: make deps_ci release_prerelease_without_clean
      - run: make deploy_platform_translations_prerelease
      - save_cache:
          key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-prerelease
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/release/app-release.apk
          destination: avni.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemap.js
          destination: sourcemap.js

  release_android_live:
    docker:
      - image: cimg/android:2022.12-node
    working_directory: ~/avni-client
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
#            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-live
            - v1-dependencies-
#      - run: sudo apt update
#      - run: sudo apt install openjdk-11-jdk make
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      - run: sudo npm i -g react-native-cli
      - run: make deps_ci
      - run: make release
      - save_cache:
          key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-live
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/app-release.apk
          destination: avni.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemap.js
          destination: sourcemap.js

workflows:
  version: 2
  test_all:
    jobs:
      - install_deps
      - test_android:
          requires:
            - install_deps
#      - hold_staging:
#          type: approval
#          requires:
#            - test_android
      - hold_prerelease:
          type: approval
          requires:
            - test_android
      - hold_live:
          type: approval
          requires:
            - test_android
      - release_android_staging:
          filters:
            branches:
              ignore:
                - /^dependabot.*/
          requires:
#            - hold_staging
            - test_android
      - release_android_prerelease:
          requires:
            - hold_prerelease
      - release_android_live:
          requires:
            - hold_live

notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/0fdffde721194986f2a0
