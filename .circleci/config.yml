version: 2
jobs:
  install_deps:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/openchs-client
    steps:
      - checkout
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
#          - v1-dependencies-
      - run: sudo apt-get install make
      - run: make deps_ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - save_cache:
          paths:
           - packages/openchs-android/node_modules
          key: v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}

  test_android:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/openchs-client
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
          - v1-dependencies-
      - run: sudo apt-get install make
      - run: make deps_ci
      - run: make ci test-android

  release_android_staging:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/openchs-client
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
          - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-staging
          - v1-dependencies-
      - run: sudo apt update software-properties-common
      - run: sudo apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main'
      - run: sudo apt update
      - run: sudo apt install openjdk-8-jdk make
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      - run: make deps_ci release_staging_without_clean
      - save_cache:
          key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-staging
          paths:
           - ~/.gradle
           - ~/.m2
           - ~/openchs-client/packages/openchs-android/android/app/.gradle
           - ~/openchs-client/packages/openchs-android/android/.gradle
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/release/app-release.apk
          destination: avni.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemap.js
          destination: sourcemap.js

  release_android_live:
      docker:
        - image: openchs/react-native-image:latest
          environment:
            - TERM: dumb
            - ENVFILE: .env.live
            - GRADLE_OPTS: "-Xmx512m -Xms512m -Dorg.gradle.daemon=false"
      working_directory: ~/openchs-client
      steps:
        - checkout
        - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-live
            - v1-dependencies-
        - run: sudo chmod a+x packages/openchs-android/android/gradlew
        - run: make deps_ci
        - run: make release
        - save_cache:
            key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-live
            paths:
             - ~/.gradle
             - ~/.m2
             - ~/openchs-client/packages/openchs-android/android/app/.gradle
             - ~/openchs-client/packages/openchs-android/android/.gradle
        - store_artifacts:
            path: packages/openchs-android/android/app/build/outputs/apk/app-release.apk
            destination: openchs.apk
        - store_artifacts:
            path: packages/openchs-android/android/app/build/generated/sourcemap.js
            destination: sourcemap.js

workflows:
  version: 2
  test_all:
    jobs:
      - install_deps
      - test_android:
          requires:
            - install_deps
      - hold_staging:
          type: approval
          requires:
            - test_android
      - hold_live:
          type: approval
          requires:
            - test_android
      - release_android_staging:
          requires:
            - hold_staging
      - release_android_live:
          requires:
            - hold_live

notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/0fdffde721194986f2a0
