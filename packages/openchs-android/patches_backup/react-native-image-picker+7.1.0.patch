diff --git a/node_modules/react-native-image-picker/android/src/main/AndroidManifest.xml b/node_modules/react-native-image-picker/android/src/main/AndroidManifest.xml
index 2209799..2c5911e 100644
--- a/node_modules/react-native-image-picker/android/src/main/AndroidManifest.xml
+++ b/node_modules/react-native-image-picker/android/src/main/AndroidManifest.xml
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest
   xmlns:android="http://schemas.android.com/apk/res/android"
-  package="com.imagepicker"
   >
     <application>
       <provider
diff --git a/node_modules/react-native-image-picker/android/src/main/java/com/imagepicker/ImagePickerModuleImpl.java b/node_modules/react-native-image-picker/android/src/main/java/com/imagepicker/ImagePickerModuleImpl.java
index afe4b3e..8cb845b 100644
--- a/node_modules/react-native-image-picker/android/src/main/java/com/imagepicker/ImagePickerModuleImpl.java
+++ b/node_modules/react-native-image-picker/android/src/main/java/com/imagepicker/ImagePickerModuleImpl.java
@@ -120,39 +120,22 @@ public class ImagePickerModuleImpl implements ActivityEventListener {
         Intent libraryIntent;
         requestCode = REQUEST_LAUNCH_LIBRARY;
 
-        int selectionLimit = this.options.selectionLimit;
-        boolean isSingleSelect = selectionLimit == 1;
+        boolean isSingleSelect = this.options.selectionLimit == 1;
         boolean isPhoto = this.options.mediaType.equals(mediaTypePhoto);
         boolean isVideo = this.options.mediaType.equals(mediaTypeVideo);
 
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.TIRAMISU) {
-            if (isSingleSelect && (isPhoto || isVideo)) {
-                libraryIntent = new Intent(Intent.ACTION_PICK);
-            } else {
-                libraryIntent = new Intent(Intent.ACTION_GET_CONTENT);
-                libraryIntent.addCategory(Intent.CATEGORY_OPENABLE);
-            }
-        } else {
-            libraryIntent = new Intent(MediaStore.ACTION_PICK_IMAGES);
-        }
+        libraryIntent = new Intent(Intent.ACTION_GET_CONTENT);
+        libraryIntent.addCategory(Intent.CATEGORY_OPENABLE);
 
         if (!isSingleSelect) {
-            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.TIRAMISU) {
-                libraryIntent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);
-            } else {
-                if (selectionLimit != 1) {
-                    int maxNum = selectionLimit;
-                    if (selectionLimit == 0) maxNum = MediaStore.getPickImagesMaxLimit();
-                    libraryIntent.putExtra(MediaStore.EXTRA_PICK_IMAGES_MAX, maxNum);
-                }
-            }
+            libraryIntent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);
         }
 
         if (isPhoto) {
             libraryIntent.setType("image/*");
         } else if (isVideo) {
             libraryIntent.setType("video/*");
-        } else if (Build.VERSION.SDK_INT < Build.VERSION_CODES.TIRAMISU) {
+        } else {
             libraryIntent.setType("*/*");
             libraryIntent.putExtra(Intent.EXTRA_MIME_TYPES, new String[]{"image/*", "video/*"});
         }
